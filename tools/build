#!/usr/bin/env node

var path = require("path");
var existsSync = require("fs").existsSync;
var readFileSync = require("fs").readFileSync;
var confpath = process.argv[2];
var target = process.argv[3];
var targetmin = process.argv[4];
var targetsourcemap = process.argv[5];
var contants = [];
var initialText;
var config;
var chunks;

console.log("WinkJS builder");

if (existsSync(confpath) == false) {
  console.log("Config file not found at `%s`", confpath);
  console.log("Run `configure` before `make`");
  return process.exit(1);
}

console.log("Reading config from `%s`", confpath);
config = require(confpath);

// Read modules
chunks = config.files.map(function(path) { return readFileSync(path) + "\n"; });

// Export all global contants
contants = [];
Object.keys(config).forEach(function(key) {
  var initial
  if (/^[A-Z\_]+$/.test(key)) {
    initial = "var " + key + "=";
    if (typeof config[key] == "string") {
      // TODO: escape string
      contants.push(initial + "'" + config[key] + "';");
    } else {
      contants.push(initial + config[key].toString() + ";");
    }
  }
});

chunks.unshift(
  "(function(global) {\n",
  "\n/*     Configuration constants - generated by `configure`   */\n\n",
  contants.join("\n"), 
  "\n\n"
);

chunks.push("\n\n})(this);");

function uglify() {
  var spawn = require("child_process").spawn;
  var uglify;
  var args;
  var cwd;
  var min;
  var sc;

  cwd = path.dirname(targetmin);
  min = path.basename(targetmin);
  sc = path.basename(targetsourcemap);

  args = [config.uglify, target, "--output", min, "--source-map", sc];
  
  uglify = spawn(process.execPath, args, { cwd: cwd });
  uglify.stderr.on('data', function (data) { process.stderr.write(data); });
  uglify.on("exit", function(code) { process.exit(code); });
}

function plain() {
  var writeFileSync = require("fs").writeFileSync;
  writeFileSync(target, chunks.join(""));
}

plain();

if (targetmin) {
  uglify();
}